部署prompt：
# NestJS 项目 AWS Lambda 部署需求

## 项目背景
我有一个基于 NestJS 构建的全栈 API 项目，包含以下功能：
- GitHub API 模块：获取用户 GitHub 仓库列表，处理分页和错误
- 数据库管理模块：用户管理、文章管理，支持读写分离架构
- 使用 Prisma ORM 进行数据库操作
- 集成 Swagger API 文档
- 支持 TypeScript 类型安全

## 部署需求

### 1. 核心部署要求
- 将 NestJS 应用部署到 AWS Lambda
- 使用 AWS SAM (Serverless Application Model) 进行部署
- 保持现有的所有 API 功能不变

### 2. 数据库网络配置需求
**问题一：Prisma 数据库子网连接**
- 应用需要在 VPC 的私有子网中运行
- 数据库（RDS PostgreSQL）部署在指定的数据库子网中
- 需要配置正确的安全组规则，允许 Lambda 访问数据库
- 要求读写分离架构，支持主从数据库连接

### 3. 外部 API 访问控制需求
**问题二：GitHub API 精确访问控制**
- Lambda 需要访问 GitHub API (https://api.github.com)
- **不希望开放全部互联网访问** (0.0.0.0/0)
- 要求精确控制：**只允许访问特定的 GitHub API 端点**
- 期望的访问控制级别：
  - 网络层：只允许 GitHub 相关的 IP 范围
  - 应用层：只允许特定的 URL 路径 (如 /user/repos, /user, /rate_limit)
  - 域名层：只允许 api.github.com 等指定域名

### 4. 安全和监控要求
- 实施多层安全防护（网络层 + 应用层 + DNS 层）
- 需要监控和日志记录访问行为
- 阻止未授权的域名和 URL 访问
- 支持访问统计和告警机制

### 5. 技术实现要求
- 提供完整的 SAM 模板配置
- 包含 VPC、子网、安全组、路由表等网络资源配置
- 提供应用层的 URL/域名白名单控制服务
- 包含部署脚本和验证测试方法
- 支持环境变量配置管理

### 6. 期望的输出
- 完整的部署文档和脚本
- SAM 模板文件（template.yaml）
- 网络安全配置代码
- 应用层控制服务代码
- 环境变量配置示例
- 部署验证和测试方法

## 关键约束
1. **不能使用 0.0.0.0/0 的路由规则**
2. **必须在 VPC 私有子网中运行**
3. **只允许访问指定的外部服务**
4. **保持原有应用功能完整性**
5. **需要生产级的安全配置**

请提供一个完整的解决方案，包括网络配置、安全策略、应用代码修改和部署流程。